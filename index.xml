<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ETdoFresh</title>
    <link>/</link>
    <description>Recent content on ETdoFresh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 Jul 2020 10:13:50 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Moving from Ghost to Hugo</title>
      <link>/moving-from-ghost-to-hugo/</link>
      <pubDate>Mon, 06 Jul 2020 10:13:50 +0000</pubDate>
      
      <guid>/moving-from-ghost-to-hugo/</guid>
      <description>Introduction After 1 or 2 days, I realized slimming down from WordPress to Ghost was just the beginning. I was somewhat satisfied. However, after setting up comments and looking at other integrations for Ghost, I feel like I&amp;rsquo;m just using a mini/less functional WordPress. The markdown editing was the reason I made the switch, but then I realized, I might as well just scrap the database backend and keep all the files in a repo.</description>
    </item>
    
    <item>
      <title>Stop/Delete All Docker Containers/Images</title>
      <link>/stop-delete-all-docker-containers-images/</link>
      <pubDate>Sun, 05 Jul 2020 22:16:28 +0000</pubDate>
      
      <guid>/stop-delete-all-docker-containers-images/</guid>
      <description>Sometimes it&amp;rsquo;s useful to start with a clean slate and remove all Docker containers and even images. Here are some handy shortcuts.
List all containers (only IDs) docker ps -aq  Stop all running containers docker stop $(docker ps -aq)  Remove all containers docker rm $(docker ps -aq)  Remove all images docker rmi $(docker images -q)  Copied from:
https://blog.baudson.de/blog/stop-and-remove-all-docker-containers-and-images</description>
    </item>
    
    <item>
      <title>It&#39;s been a while, world!</title>
      <link>/it-s-been-a-while-world/</link>
      <pubDate>Sun, 05 Jul 2020 21:50:16 +0000</pubDate>
      
      <guid>/it-s-been-a-while-world/</guid>
      <description>Hi! I have realized I have not been writing in my blog. At all!
So, I decided to go crazy and switch from Wordpress to Ghost as my blogging platform! Hope it pays off! I&amp;rsquo;ll be working slowly but surely porting my old blog posts over here.
So, what have I been up to? Well, I really want to start putting myself out there digitally. So, I&amp;rsquo;m preparing steps to get out there.</description>
    </item>
    
    <item>
      <title>Increase Maximum File Size Server Allows</title>
      <link>/increase-maximum-file-size-server-allows/</link>
      <pubDate>Sun, 05 Jul 2020 05:00:00 +0000</pubDate>
      
      <guid>/increase-maximum-file-size-server-allows/</guid>
      <description>When setting up a blog server, as we did in Install Ghost on Linode Docker, you may have realized that sometimes the server does not like huge files. In order to up the maximum file size allowed, edit your ~/nginx-conf/default.conf
server { ... client_max_body_size 500M; } Then restart your, in this site&amp;rsquo;s case
docker exec -it $DOCKER_POD_ID service nginx restart References https://etdofresh.com/install-ghost-on-linode-docker/
https://www.tecmint.com/limit-file-upload-size-in-nginx/</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/page/about/</link>
      <pubDate>Fri, 03 Apr 2015 02:13:50 +0000</pubDate>
      
      <guid>/page/about/</guid>
      <description>About Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean nec dolor in magna lobortis egestas. Suspendisse eu erat tempor, tristique neque eu, convallis nulla. Curabitur vel bibendum lacus, at semper mauris. Suspendisse aliquet commodo ex, sed sagittis metus aliquam id. Maecenas feugiat rutrum lorem vel imperdiet. Nullam ornare lectus ut enim finibus, et porttitor mi tincidunt. Aenean lacinia, leo quis vehicula eleifend, quam libero sagittis erat, at euismod augue mauris et sapien.</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>/page/contact/</link>
      <pubDate>Fri, 03 Apr 2015 02:13:50 +0000</pubDate>
      
      <guid>/page/contact/</guid>
      <description>Contact Aenean ipsum justo, semper eu nisl ut, pretium tincidunt sem. Praesent et diam sit amet lacus lobortis dictum a id lacus. Quisque hendrerit sit amet turpis eu varius. Ut id lorem ac felis ultrices tincidunt. Pellentesque consequat arcu ac fringilla imperdiet. Phasellus pellentesque, sapien non pulvinar blandit, sapien ante aliquet felis, vel porttitor sapien ante in lacus. Fusce non urna aliquet, malesuada nibh vel, luctus urna. Phasellus ut lacus molestie, varius purus quis, malesuada lorem.</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 02:13:50 +0000</pubDate>
      
      <guid>/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 02:13:50 +0000</pubDate>
      
      <guid>/goisforlovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Migrating from Jekyll</title>
      <link>/migrate-from-jekyll/</link>
      <pubDate>Wed, 02 Apr 2014 02:13:50 +0000</pubDate>
      
      <guid>/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
  </channel>
</rss>